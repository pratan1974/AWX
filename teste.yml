---
- hosts: all
  gather_facts: no
  vars:
    win_update_categories:
        - CriticalUpdates
        - DefinitionUpdates
        - SecurityUpdates
        - Updates
        - UpdateRollups

  tasks:
  # Check if there are missing Critical and Security Updates
    - block:
        - name: Checking for Available Windows Updates
          win_updates:
            category_names: "{{ win_update_categories }}"
            state: searched
          register: available_updates

        - name: debug
          debug:
           msg: "{{ available_updates.found_update_count | type_debug }}" 

        - name: Print results
          vars:
             treta: |
               {% for key, value in available_updates.updates.items() %}
               if not exists (select * from t_Updates where (id = '{{ value.id }}' and Host = '{{ inventory_hostname }}')) insert into T_Updates (ID,Host,Title,KB) VALUES( '{{ value.id}}', '{{ inventory_hostname }}', '{{ value.title}}', '{{ value.kb[0] }}');
               {% endfor %}
             treta1: | 
               {{ inventory_hostname }} has {{ available_updates.found_update_count }} updates available.
          debug:
            # output the format in a pretty manner; requires ANSIBLE_STDOUT_CALLBACK=debug environment variable to be set
            msg: "{{ treta.split('\n') }}"

        - name: Generate update sql unix
          local_action:
            module: community.general.database.mssql.mssql_script
            login_user: sa
            login_password: Password123
            login_host: windb
            login_port: 1433
            db: CMDB
            script: |
              {% for key, value in available_updates.updates.items() %}
              if not exists (select * from t_Updates where (id = '{{ value.id }}' and Host = '{{ inventory_hostname }}')) insert into T_Updates (ID,Host,Title,KB) VALUES( '{{ value.id}}', '{{ inventory_hostname }}', '{{ value.title}}', '{{ value.kb[0] }}');
              {% endfor %}
          ignore_errors: yes
          run_once: no
